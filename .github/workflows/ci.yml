name: DevSecOps Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run unit tests
        run: pytest

  sast-sca:
    name: SAST & SCA Scan
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # ----- SAST Scan -----
      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit SAST Scan
        run: bandit -r . -lll -iii
        continue-on-error: false  # Fails if critical/high vulnerabilities are found

      # ----- SCA Scan -----
      - name: Install Safety
        run: pip install safety

      - name: Run Safety SCA Scan
        run: safety check --full-report --exit-code 1

  dast:
    name: DAST Scan
    runs-on: ubuntu-latest
    needs: build-test
    services:
      docker:
        image: docker:20.10.16
        options: --privileged
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # ----- Build Docker image -----
      - name: Build Docker image
        run: docker build -t myapp:test .

      # ----- Run Docker container -----
      - name: Run Docker container
        run: docker run -d -p 5000:5000 --name myapp myapp:test

      # ----- Wait for app to start -----
      - name: Wait for app
        run: sleep 15

      # ----- Run OWASP ZAP DAST Scan -----
      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker run --rm -t owasp/zap2docker-stable zap-baseline.py \
          -t http://host.docker.internal:5000 \
          -r zap_report.html \
          -g gen.conf

      # Stop Docker container
      - name: Stop Docker container
        run: docker stop myapp
